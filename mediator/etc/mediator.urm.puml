@startuml
package com.iluwatar.mediator {
  interface Party {
    + act(PartyMember, Action) {abstract}
    + addMember(PartyMember) {abstract}
  }
  interface PartyMember {
    + act(Action) {abstract}
    + joinedParty(Party) {abstract}
    + partyAction(Action) {abstract}
  }
  class Rogue {
    + Rogue()
    + toString() : String
  }
  class Hunter {
    + Hunter()
    + toString() : String
  }
  class PartyImpl {
    - members : List<PartyMember>
    + PartyImpl()
    + act(actor : PartyMember, action : Action)
    + addMember(member : PartyMember)
  }
  class Hobbit {
    + Hobbit()
    + toString() : String
  }
  class Wizard {
    + Wizard()
    + toString() : String
  }
  abstract class PartyMemberBase {
    # party : Party
    + PartyMemberBase()
    + act(action : Action)
    + joinedParty(party : Party)
    + partyAction(action : Action)
    + toString() : String {abstract}
  }
  class App {
    + App()
    + main(args : String[]) {static}
  }
  enum Action {
    + ENEMY {static}
    + GOLD {static}
    + HUNT {static}
    + NONE {static}
    + TALE {static}
    - description : String
    - title : String
    + getDescription() : String
    + toString() : String
    + valueOf(name : String) : Action {static}
    + values() : Action[] {static}
  }
}
PartyImpl -->  "-members" PartyMember
PartyMemberBase -->  "-party" Party
Rogue --|> PartyMemberBase 
Hunter --|> PartyMemberBase 
PartyImpl ..|> Party 
Hobbit --|> PartyMemberBase 
Wizard --|> PartyMemberBase 
PartyMemberBase ..|> PartyMember 
@enduml